<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on kobtea.net</title>
    <link>https://kobtea.net/posts/</link>
    <description>Recent content in Posts on kobtea.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Copyright © 2013-2023, kobtea</copyright>
    <lastBuildDate>Sun, 29 Aug 2021 19:37:00 +0900</lastBuildDate><atom:link href="https://kobtea.net/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jsonnet/Monitoring MixinsでPrometheus Rule, Grafana Dashboardを管理する</title>
      <link>https://kobtea.net/posts/2021/08/29/monitoring-mixins/</link>
      <pubDate>Sun, 29 Aug 2021 19:37:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2021/08/29/monitoring-mixins/</guid>
      <description>概要 Prometheus, Grafanaの監視基盤で遭遇する、Rule, Dashboardをどうやって管理しようかという話。 Raw Yaml/Json, Jsonnet, k8s CRDなど各社方法は様々だが、今回はJsonnetでの管理をより拡張したMonitori</description>
    </item>
    
    <item>
      <title>ArgoCDでHelmfileを使う</title>
      <link>https://kobtea.net/posts/2021/05/08/argo-cd-helmfile/</link>
      <pubDate>Sat, 08 May 2021 09:25:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2021/05/08/argo-cd-helmfile/</guid>
      <description>ArgoCD上でHelmfileを使いたい。 概要 ArgoCDはmanifestの管理方法として下記ツールをサポートしている。 Kustomize Helm Ksonnet Yaml/Json/Jsonnet Helmfileなどその他ツールを利用したい場合、Config Management Pl</description>
    </item>
    
    <item>
      <title>Jsonnetで複数ファイルへ出力する</title>
      <link>https://kobtea.net/posts/2021/04/04/jsonnet-multiple-output/</link>
      <pubDate>Sun, 04 Apr 2021 19:03:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2021/04/04/jsonnet-multiple-output/</guid>
      <description>jsonnetの成果物を1ファイルでなく、複数ファイルへ出力したい。 Getting Startedに思いっきり書いてあった。 $ cat multi.jsonnet { &amp;#39;a.json&amp;#39;: { a: &amp;#39;foo&amp;#39;, }, &amp;#39;b.json&amp;#39;: { b: &amp;#39;bar&amp;#39;, }, } こんな感じで {&amp;quot;FILE_NAME&amp;quot;: &amp;quot;OBJECT&amp;quot;, ...} として記述するだけ。 -m オプションでファイル</description>
    </item>
    
    <item>
      <title>Linuxで辞書引き環境作る</title>
      <link>https://kobtea.net/posts/2019/05/12/linux-dictionary-goldendict/</link>
      <pubDate>Sun, 12 May 2019 17:01:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2019/05/12/linux-dictionary-goldendict/</guid>
      <description>linuxでもお手軽に辞書を引きたい。 探した所GoldenDictというのがあったのでこれ使う。 環境 $ lsb_release -d Description: Ubuntu 18.04.2 LTS $ dpkg -l | egrep &amp;#39;goldendict|albert&amp;#39; ii albert 0.16.1 amd64 A sophisticated, plugin-based, standalone keyboard launcher written in C++/Qt ii goldendict 1.5.0~rc2+git20170908+ds-1 amd64 feature-rich dictionary lookup program GoldenDict aptで入れる。 $ sudo apt install goldendict 辞書</description>
    </item>
    
    <item>
      <title>LinuxでKeymapをmacOSぽくする</title>
      <link>https://kobtea.net/posts/2019/05/03/linux-keymap-like-mac/</link>
      <pubDate>Fri, 03 May 2019 19:47:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2019/05/03/linux-keymap-like-mac/</guid>
      <description>macユーザがmacOS離れをすると、キーマップ問題にだいたい悩まされる。 みんな同じ悩みを抱えている様子だけど、ベストプラクティスらしいものは見つからない。 shortcut keys - How to make keyboard work like OSX System Wide? - Ask Ubuntu macos - Efficient key bindings using both</description>
    </item>
    
    <item>
      <title>TEX Yoda IIをmacOSで使った</title>
      <link>https://kobtea.net/posts/2019/02/03/tex-yoda-2-with-macos/</link>
      <pubDate>Sun, 03 Feb 2019 17:25:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2019/02/03/tex-yoda-2-with-macos/</guid>
      <description>前回: TEX Yoda IIを作る 1ヶ月弱macOSで使ってみたら、ちょいちょい試行錯誤したり諦めが必要なところがあったのでメモ。 キーマップ 最終的にキーマップはこんな感じになった。 そんな特殊なマップにはしていない。</description>
    </item>
    
    <item>
      <title>TEX Yoda IIを作る</title>
      <link>https://kobtea.net/posts/2019/01/11/tex-yoda-2/</link>
      <pubDate>Fri, 11 Jan 2019 15:24:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2019/01/11/tex-yoda-2/</guid>
      <description>TEX Yoda IIというキーボードキットを買ったのでビルドログを残しておく。 TEX Yoda II (個人的には)魅力はトラックポイントが付いているというただ一点、でもそれで十分ポチれる魅力がある。 キーマップを自由にいじれたり、</description>
    </item>
    
    <item>
      <title>Google SRE本を読んだ</title>
      <link>https://kobtea.net/posts/2017/12/04/google-sre-book/</link>
      <pubDate>Mon, 04 Dec 2017 21:26:45 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2017/12/04/google-sre-book/</guid>
      <description>やっとこさ読み終わったので、読む前に感じていた疑問を含めつつ感想などを書いておく。 SREってなんだろう ユーザに価値を最速かつ継続的に提供することを目的に添えた、開発もできる運用部隊。 価値を素早く提供す</description>
    </item>
    
    <item>
      <title>Google Stackdriverを眺める</title>
      <link>https://kobtea.net/posts/2016/06/04/try-google-stackdriver/</link>
      <pubDate>Sat, 04 Jun 2016 21:59:34 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2016/06/04/try-google-stackdriver/</guid>
      <description>以前話題になったStackdriverをbetaのうちに触っておこうそうしよう。 AWSがCloudWatchなら、GCPはStackdriverや！！ Stackdriverの提供する機能 Documen</description>
    </item>
    
    <item>
      <title>OpenGrokのデザインを変更する</title>
      <link>https://kobtea.net/posts/2016/05/14/customize-skin-for-opengrok/</link>
      <pubDate>Sat, 14 May 2016 04:21:57 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2016/05/14/customize-skin-for-opengrok/</guid>
      <description>以前Ubuntu trustyにOpenGrokをインストールするで、 サイトのデザインを変えたい場合はどうすればいいんだろう…folkして魔改造するのかな…それはつらそうだな… と書いたけど、方法がわかっ</description>
    </item>
    
    <item>
      <title>Ubuntu trustyにOpenGrokをインストールする</title>
      <link>https://kobtea.net/posts/2016/05/03/setup-opengrok/</link>
      <pubDate>Tue, 03 May 2016 03:16:25 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2016/05/03/setup-opengrok/</guid>
      <description>tomcat力低いけどOpenGrok使ってみたいんや！ お試しにvagrantで立ててみる。 参考: How to install OpenGrok Supported Languages and Formats 環境 Ubuntu 14.04.4 OpenJDK 1.7.0_95 OpenGrok 0.12.1.5 Setup 必要なpackageをインストールする。 ~$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade -y ~$ sudo apt-get install openjdk-7-jdk</description>
    </item>
    
    <item>
      <title>2015年の振り返り</title>
      <link>https://kobtea.net/posts/2015/12/31/inventory-of-2015/</link>
      <pubDate>Thu, 31 Dec 2015 22:00:48 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2015/12/31/inventory-of-2015/</guid>
      <description>こたつでぬくぬく。 思いつくキーワードを拾いつつ、だらだら思い返す。 技術的なこと もう少し頑張りましょう OSSコントリビュート パッチを投げて初コントリビュートした。 メンテナの方が深夜にもかかわらず素早くレ</description>
    </item>
    
    <item>
      <title>RAID組もうとしたけどrsync(robocopy)で済ませた話</title>
      <link>https://kobtea.net/posts/2015/12/20/rsync-instead-raid/</link>
      <pubDate>Sun, 20 Dec 2015 18:19:02 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2015/12/20/rsync-instead-raid/</guid>
      <description>ちょびちょびバックアップはとっていたけど、まともな冗長構成の取れたストレージが自宅になかった。 写真とか自炊本を失う前にいい加減なんとかしようそうしよう。 紆余曲折あったのでありのままの紆余曲折を書いてい</description>
    </item>
    
    <item>
      <title>[Scala] sbt consoleでCtrl-Dが効かなくなったらthread設定を疑う</title>
      <link>https://kobtea.net/posts/2015/09/15/sbt-console-quit/</link>
      <pubDate>Tue, 15 Sep 2015 22:10:55 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2015/09/15/sbt-console-quit/</guid>
      <description>環境 scalaVersion := &amp;#34;2.11.6&amp;#34; libraryDependencies += &amp;#34;com.typesafe.akka&amp;#34; %% &amp;#34;akka-actor&amp;#34; % &amp;#34;2.3.11&amp;#34; 悩み akkaでthread pool作って遊んでたらsbt consoleをctrl-Dで抜けられなくなった。 scala&amp;gt; import scala.concurrent.Future scala&amp;gt; import akka.actor.ActorSystem scala&amp;gt; implicit val ec = ActorSystem().dispatcher ec: scala.concurrent.ExecutionContextExecutor = Dispatcher[akka.actor.default-dispatcher] scala&amp;gt; Future(1)(ec) res0: scala.concurrent.Future[Int] = scala.concurrent.impl.Promise$DefaultPromise@9ccb14d scala&amp;gt; :q // consoleから抜</description>
    </item>
    
    <item>
      <title>YAPC::Asia Tokyo 2015 で聴いたセッションのメモや感想</title>
      <link>https://kobtea.net/posts/2015/08/23/yapc/</link>
      <pubDate>Sun, 23 Aug 2015 22:59:36 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2015/08/23/yapc/</guid>
      <description>最初で最後のYAPC。 聴いたセッションのメモとか感想とかをぽつぽつと。 前夜祭 PHP帝国の逆襲！（を願うPHPerが話す最近のPHPについてのクイックツアー PHP7対応版） Hackとの速度勝負 Hackが</description>
    </item>
    
    <item>
      <title>YAPC::Asia Tokyo 2015 「ISUCONの勝ち方」メモ</title>
      <link>https://kobtea.net/posts/2015/08/22/yapc-isucon/</link>
      <pubDate>Sat, 22 Aug 2015 19:19:11 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2015/08/22/yapc-isucon/</guid>
      <description>インフラ力が上がると噂の競技ISUCONについて、ISUCON4優勝者自ら必勝法を公開。 そのうちスライドも公開して頂けるらしいが自分のために。 リンク [公式]ISUCON [公式]トーク情報 togetter スピーカー:</description>
    </item>
    
    <item>
      <title>[Scala] Future#recoverを使って例外処理する</title>
      <link>https://kobtea.net/posts/2015/05/18/scala-future-recover/</link>
      <pubDate>Mon, 18 May 2015 20:56:24 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2015/05/18/scala-future-recover/</guid>
      <description>環境 ➜ ~ scala Welcome to Scala version 2.11.6 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_11). Type in expressions to have them evaluated. Type :help for more information. やりたいこと scala.concurrent.Futureで例外が発生してFailureになったとき、 デフォルト値を適用してSuccessで返</description>
    </item>
    
    <item>
      <title>Java Optionの一覧表示</title>
      <link>https://kobtea.net/posts/2015/03/28/java-printflagsfinal/</link>
      <pubDate>Sat, 28 Mar 2015 01:23:54 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2015/03/28/java-printflagsfinal/</guid>
      <description>JavaのOptionは口コミとかググって知ったオプションを使うとかでイマイチ全体観がつかめない。 そんなときは-XX:+PrintFlagsFinal等を使うと幸せになれるかもしれない！ (しかしこのO</description>
    </item>
    
    <item>
      <title>WindowsでUS配列&#43;親指IME ON/OFFするための設定</title>
      <link>https://kobtea.net/posts/2014/03/23/setup-us-keyboard-on-win/</link>
      <pubDate>Sun, 23 Mar 2014 00:43:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2014/03/23/setup-us-keyboard-on-win/</guid>
      <description>macでJIS配列からUS配列にジョブチェンジして1年位経ったので、win環境でもUS配列にしたいなーと。 RealforceのUS配列を購入してwinに設定したこと。 環境 OS: Windows7 64bit Keyboard: Realforce 87U デスクトップ環境な</description>
    </item>
    
    <item>
      <title>MBAにpyenvを入れる</title>
      <link>https://kobtea.net/posts/2013/11/24/install-pyenv-on-mba/</link>
      <pubDate>Sun, 24 Nov 2013 17:31:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2013/11/24/install-pyenv-on-mba/</guid>
      <description>$ sw_vers ProductName: Mac OS X ProductVersion: 10.8.4 BuildVersion: 12E3067 rbenvのpython版ないかなーと探してみたらpyenvなんてそのまんまなものがあった。 Simple Python Version Management: pyenvを参考に。 Macでhomebrew使っているなら、brewで入れるのが</description>
    </item>
    
    <item>
      <title>Github Pagesにカスタムドメインを割り当てる</title>
      <link>https://kobtea.net/posts/2013/09/23/set-custom-domain-at-github-pages/</link>
      <pubDate>Mon, 23 Sep 2013 21:39:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2013/09/23/set-custom-domain-at-github-pages/</guid>
      <description>参考: Setting up a custom domain with Pages - Github Pages Custom Domains - Octopress リポジトリのトップディレクトリにCNAMEファイルを作成して、そこに定義するだけで良いみたい。 Tip: After creating the file, it can take up to 10 minutes for the content to become available. Once the Page content is available, you can continue to make the DNS changes in the next step.</description>
    </item>
    
    <item>
      <title>Octopressのテーマを変更する</title>
      <link>https://kobtea.net/posts/2013/09/23/change-octopress-theme/</link>
      <pubDate>Mon, 23 Sep 2013 14:56:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2013/09/23/change-octopress-theme/</guid>
      <description>3rd Party Octopress Themesで公開されているので気に入ったものを選ぶ。 CleanPressがステキ。 # テーマのディレクトリまで行ってテーマのリポジトリをclone $ cd octopress/.theme $ git clone git@github.com:macjasp/cleanpress.git Cloning into &amp;#39;cleanpress&amp;#39;... remote: Counting objects: 273, done. remote: Compressing objects: 100% (248/248), done. remote: Total 273</description>
    </item>
    
    <item>
      <title>Octopress &#43; Github Pagesな環境構築</title>
      <link>https://kobtea.net/posts/2013/09/23/setup-octopress/</link>
      <pubDate>Mon, 23 Sep 2013 01:54:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2013/09/23/setup-octopress/</guid>
      <description>もはや様式美だけど自分のために。 公式のOctopress Documentationを参考に。 $ sw_vers ProductName: Mac OS X ProductVersion: 10.8.4 BuildVersion: 12E3067 $ ruby -v ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin12.4.1] $ gem -v 2.0.3 $ bundle -v Bundler version 1.3.5 Octopressのセットアップ 参考 : Octopress Setup # リポジ</description>
    </item>
    
    <item>
      <title>MBAにRuby環境を作る</title>
      <link>https://kobtea.net/posts/2013/09/23/install-ruby-on-mba/</link>
      <pubDate>Mon, 23 Sep 2013 00:17:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2013/09/23/install-ruby-on-mba/</guid>
      <description>$ sw_vers ProductName: Mac OS X ProductVersion: 10.8.4 BuildVersion: 12E3067 rbenvのreadmeにそってやる。 PATHについて解説までしてくれるとかマジ天使。 rbenvのインストール # homebrewを最新の状態に $ brew update $ brew upgrade # rbenvをインストール</description>
    </item>
    
    <item>
      <title>irbで日本語が文字化けする</title>
      <link>https://kobtea.net/posts/2013/09/22/use-multibytes-on-ruby/</link>
      <pubDate>Sun, 22 Sep 2013 23:38:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2013/09/22/use-multibytes-on-ruby/</guid>
      <description>$ sw_vers ProductName: Mac OS X ProductVersion: 10.8.4 BuildVersion: 12E3067 $ ruby --version ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin12.4.1] $ irb --version irb 0.9.6(09/06/30) &amp;lsquo;日本語&amp;rsquo;と打とうとするとこうなる。 $ irb irb(main):001:0&amp;gt; p &amp;#39;\U+FFE6\U+FFA5\U+FFE6\U+FFAC\U+FFE8\U+FFAA&amp;#39; &amp;#34;&amp;#34; =&amp;gt; &amp;#34;&amp;#34; 色々調べてみたらMacデフォルトのreadlineがあんまりイケてないとのこ</description>
    </item>
    
    <item>
      <title>VimでステキなMarkdownライフを送りたい</title>
      <link>https://kobtea.net/posts/2013/09/22/use-markdown-on-vim/</link>
      <pubDate>Sun, 22 Sep 2013 22:57:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2013/09/22/use-markdown-on-vim/</guid>
      <description>インストールするもの。 https://github.com/plasticboy/vim-markdown markdown用シンタックスハイライト https://github.com/kannokanno/previm markdownのプレビュー https://github.com/tyru/open-browser.vim URIをブラウザで開く .vimrcに以下を追記する。 NeoBundle使ってるよ。 &amp;#34; .vimrc NeoBundle &amp;#39;plasticboy/vim-markdown&amp;#39; NeoBundle &amp;#39;kannokanno/previm&amp;#39; NeoBundle &amp;#39;tyru/open-browser.vim&amp;#39; &amp;#34;g:previm_open_cmd &amp;#34; o</description>
    </item>
    
    <item>
      <title>こんにちはOctopress</title>
      <link>https://kobtea.net/posts/2013/09/22/hello-octopress/</link>
      <pubDate>Sun, 22 Sep 2013 22:44:00 +0900</pubDate>
      
      <guid>https://kobtea.net/posts/2013/09/22/hello-octopress/</guid>
      <description>よろしくタコ出版！</description>
    </item>
    
  </channel>
</rss>
